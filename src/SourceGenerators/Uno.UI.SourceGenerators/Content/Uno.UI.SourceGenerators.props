<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Legacy tasks to allow for smoother upgrade from Uno.UI.Tasks -->
  <Target Name="XamlGeneration" />
  <Target Name="BindableMetadataGenerator" />

  <PropertyGroup>
	<_isRoslynAnalyzerAvailable Condition="'$(MSBuildVersion)' &gt;= '16.8'">true</_isRoslynAnalyzerAvailable>
	<_canUseRoslynAnalyzer Condition="'$(LangVersion)' == 'preview' or ('$(LangVersion)'!='' and $(LangVersion.Contains('.')) and '$(LangVersion)'&gt;='9.0')">true</_canUseRoslynAnalyzer>
	<UnoUIUseRoslynSourceGenerators Condition="'$(UnoUIUseRoslynSourceGenerators)'=='' and '$(_isRoslynAnalyzerAvailable)' == 'true' and '$(_canUseRoslynAnalyzer)'=='true'">true</UnoUIUseRoslynSourceGenerators>

	<XamarinProjectType Condition="'$(ProjectTypeGuids)'=='{FEACFBD2-3405-455C-9665-78FE426C6842};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}' or $(TargetFramework.ToLower().StartsWith('xamarinios'))">ios</XamarinProjectType>
	<XamarinProjectType Condition="'$(ProjectTypeGuids)'=='{EFBA0AD7-5A72-4C68-AF49-83D382785DCF};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}' or $(TargetFramework.ToLower().StartsWith('monoandroid'))">android</XamarinProjectType>
	<XamarinProjectType Condition="'$(ProjectTypeGuids)'=='{A3F8F2AB-B479-4A4A-A458-A89E7DC349F1};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}' or '$(TargetFramework)'=='xamarinmac20'">macos</XamarinProjectType>
	<XamarinProjectType Condition="'$(UnoRuntimeIdentifier)'=='WebAssembly'">wasm</XamarinProjectType>
	<XamarinProjectType Condition="'$(UnoRuntimeIdentifier)'=='Skia'">skia</XamarinProjectType>
	<XamarinProjectType Condition="'$(TargetFramework)'=='net461'">net461</XamarinProjectType>
  </PropertyGroup>

  <Choose>
	<When Condition="'$(UnoUIUseRoslynSourceGenerators)'=='true'">
	  <!-- C# 9.0 Generator -->

	  <ItemGroup>
		<Analyzer Include="$(MSBuildThisFileDirectory)..\bin\$(Configuration)\netstandard2.0\Uno.UI.SourceGenerators.dll" Condition="exists('$(MSBuildThisFileDirectory)..\bin\$(Configuration)')"/>
		<!-- generator is automatically included in nuget package, no need to add it here -->
	  </ItemGroup>

	 <PropertyGroup>
	   <UnoUIUseRoslynSourceGeneratorsValue>$(UnoUIUseRoslynSourceGenerators)</UnoUIUseRoslynSourceGeneratorsValue>
	 </PropertyGroup>

	  <ItemGroup>
		<CompilerVisibleProperty Include="TargetPlatformIdentifier" />
		<CompilerVisibleProperty Include="TargetFramework" />
		<CompilerVisibleProperty Include="ProjectTypeGuidsProperty" />
		<CompilerVisibleProperty Include="MSBuildProjectFullPath" />
		<CompilerVisibleProperty Include="RootNamespace" />
		<CompilerVisibleProperty Include="DefineConstantsProperty" />
		<CompilerVisibleProperty Include="Configuration" />
		<CompilerVisibleProperty Include="IntermediateOutputPath" />
		<CompilerVisibleProperty Include="AndroidApplication" />
		<CompilerVisibleProperty Include="OutputType" />
		<CompilerVisibleProperty Include="MSBuildProjectName" />
		<CompilerVisibleProperty Include="BuildingProject" />
		<CompilerVisibleProperty Include="DesignTimeBuild" />

		<CompilerVisibleProperty Include="UseWPF" />
		<CompilerVisibleProperty Include="IsUnoHead" />
		<CompilerVisibleProperty Include="UnoRemoteControlPort" />
		<CompilerVisibleProperty Include="UnoRemoteControlHost" />
		<CompilerVisibleProperty Include="TSBindingsPath" />
		<CompilerVisibleProperty Include="UseUnoXamlParser" />
		<CompilerVisibleProperty Include="UnoSkipUserControlsInVisualTree" />
		<CompilerVisibleProperty Include="ShouldWriteErrorOnInvalidXaml" />
		<CompilerVisibleProperty Include="IsUiAutomationMappingEnabled" />
		<CompilerVisibleProperty Include="ShouldAnnotateGeneratedXaml" />
		<CompilerVisibleProperty Include="DefaultLanguage" />
		<CompilerVisibleProperty Include="UnoPlatformTelemetryOptOut" />
		<CompilerVisibleProperty Include="ExcludeXamlNamespacesProperty" />
		<CompilerVisibleProperty Include="IncludeXamlNamespacesProperty" />
		<CompilerVisibleProperty Include="XamlGeneratorAnalyzerSuppressionsProperty" />
		<CompilerVisibleProperty Include="LegacyTypesProperty" />

		<CompilerVisibleItemMetadata Include="AdditionalFiles" MetadataName="SourceItemGroup" />
		<CompilerVisibleItemMetadata Include="AdditionalFiles" MetadataName="Link" />
	  </ItemGroup>

	</When>
	<Otherwise>
	  <PropertyGroup Condition="'$(UnoUIGeneratorsBinPath)'==''">
		<_UnoUIGeneratorsBinPathInPackage>$(MSBuildThisFileDirectory)..\tools\uno-sourcegen</_UnoUIGeneratorsBinPathInPackage>
		<_UnoUIGeneratorsBinPathInSource>$(MSBuildThisFileDirectory)..\bin\$(Configuration)\net461</_UnoUIGeneratorsBinPathInSource>
		<UnoUIGeneratorsBinPath Condition="exists('$(_UnoUIGeneratorsBinPathInPackage)')">$(_UnoUIGeneratorsBinPathInPackage)</UnoUIGeneratorsBinPath>
		<UnoUIGeneratorsBinPath Condition="exists('$(_UnoUIGeneratorsBinPathInSource)')">$(_UnoUIGeneratorsBinPathInSource)</UnoUIGeneratorsBinPath>
	  </PropertyGroup>
	  <ItemGroup>
		<SourceGenerator Include="$(UnoUIGeneratorsBinPath)\Uno.UI.SourceGenerators.dll" />
	  </ItemGroup>
	</Otherwise>
  </Choose>

  <ItemGroup>

	<ExcludeXamlNamespaces Include="win"/>
	<!-- iOS -->
	<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'=='ios'" Include="android" />
	<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'=='ios'" Include="not_ios" />
	<!-- macOS -->
	<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'=='macos'" Include="not_macos" />
	<!-- Android -->
	<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'=='android'" Include="ios" />
	<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'=='android'" Include="not_android" />
	<!--WASM-->
	<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'=='wasm'" Include="not_wasm" />
	<!--Skia-->
	<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'=='skia'" Include="not_skia" />

	<!-- 
			Those namespaces are to be *included* from the code generation,
			regardless of their presence in the Ignorable section of a Xaml file.
			-->
	<IncludeXamlNamespaces Include="xamarin" />
	<IncludeXamlNamespaces Include="not_win" />
	<IncludeXamlNamespaces Include="legacy" />
	<!-- iOS -->
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='ios'" Include="ios" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='ios'" Include="not_android" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='ios'" Include="not_wasm" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='ios'" Include="not_macos" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='ios'" Include="not_skia" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='ios'" Include="not_netstdref" />
	<!-- macOS -->
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='macos'" Include="macos" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='macos'" Include="not_android" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='macos'" Include="not_wasm" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='macos'" Include="not_ios" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='macos'" Include="not_skia" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='macos'" Include="not_netstdref" />
	<!-- Android -->
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='android'" Include="android" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='android'" Include="not_ios" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='android'" Include="not_wasm" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='android'" Include="not_macos" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='android'" Include="not_skia" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='android'" Include="not_netstdref" />
	<!-- WASM -->
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='wasm'" Include="wasm" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='wasm'" Include="netstdref" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='wasm'" Include="not_ios" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='wasm'" Include="not_android" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='wasm'" Include="not_macos" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='wasm'" Include="not_skia" />
	<!-- Skia -->
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='skia'" Include="skia" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='skia'" Include="netstdref" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='skia'" Include="not_ios" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='skia'" Include="not_android" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='skia'" Include="not_macos" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='skia'" Include="not_wasm" />
	<!-- NET461 -->
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='net461'" Include="net461" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='net461'" Include="not_ios" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='net461'" Include="not_android" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='net461'" Include="not_wasm" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='net461'" Include="not_macos" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='net461'" Include="not_skia" />
	<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='net461'" Include="not_netstdref" />

	<!--
				A list of analyzer suppressions to include in every generated class.
				This is required for roslyn analyzers that do not support the GeneratedCodeAttribute.
			-->
	<XamlGeneratorAnalyzerSuppressions Include="nventive.Usage-NV0056" />
	<XamlGeneratorAnalyzerSuppressions Include="nventive.Usage-NV0058" />
	<XamlGeneratorAnalyzerSuppressions Include="nventive.Usage-NV1003" />
	<XamlGeneratorAnalyzerSuppressions Include="nventive.Usage-NV0085" />
	<XamlGeneratorAnalyzerSuppressions Include="nventive.Usage-NV2001" />
	<XamlGeneratorAnalyzerSuppressions Include="nventive.Usage-NV2003" />
	<XamlGeneratorAnalyzerSuppressions Include="nventive.Usage-NV2004" />
	<XamlGeneratorAnalyzerSuppressions Include="nventive.Usage-NV2005" />
  </ItemGroup>

  <PropertyGroup>
	<OutputSourceComments Condition="'$(OutputSourceComments)'=='' And '$(Configuration)'=='Debug'">True</OutputSourceComments>
	<OutputSourceComments Condition="'$(OutputSourceComments)'==''">False</OutputSourceComments>
  </PropertyGroup>

  <!--Default UI automation member mappings-->
  <ItemGroup Condition="@(CustomUiAutomationMemberMapping)==''">
	<CustomUiAutomationMemberMapping Include="nVentive.Umbrella.Views.Controls.AsyncValuePresenter">
	  <Mappings>
		DataSource
	  </Mappings>
	</CustomUiAutomationMemberMapping>
	<CustomUiAutomationMemberMapping Include="Windows.UI.Xaml.Controls.IItemsControl">
	  <Mappings>
		ItemsSource
	  </Mappings>
	</CustomUiAutomationMemberMapping>
	<CustomUiAutomationMemberMapping Include="Uno.UI.Controls.BindableListView">
	  <Mappings>
		ItemsSource
	  </Mappings>
	</CustomUiAutomationMemberMapping>
	<CustomUiAutomationMemberMapping Include="Uno.UI.Controls.BindableGridView">
	  <Mappings>
		ItemsSource
	  </Mappings>
	</CustomUiAutomationMemberMapping>
	<CustomUiAutomationMemberMapping Include="Windows.UI.Xaml.Controls.ItemsControl">
	  <Mappings>
		ItemsSource
	  </Mappings>
	</CustomUiAutomationMemberMapping>
	<CustomUiAutomationMemberMapping Include="Windows.UI.Xaml.Controls.PasswordBox">
	  <Mappings>
		Password
	  </Mappings>
	</CustomUiAutomationMemberMapping>
	<CustomUiAutomationMemberMapping Include="Windows.UI.Xaml.Controls.TextBox">
	  <Mappings>
		Text
		Uno.UI.Behaviors.TextBoxBehavior.Text
		nVentive.Umbrella.Views.Behaviors.TextBoxBehavior.Text
		nVentive.Umbrella.Views.Behaviors.PasswordBoxBehavior.Text
	  </Mappings>
	</CustomUiAutomationMemberMapping>
	<CustomUiAutomationMemberMapping Include="Windows.UI.Xaml.Controls.Button">
	  <Mappings>
		Command
	  </Mappings>
	</CustomUiAutomationMemberMapping>
	<CustomUiAutomationMemberMapping Include="Windows.UI.Xaml.Controls.ToggleButton">
	  <Mappings>
		IsChecked
	  </Mappings>
	</CustomUiAutomationMemberMapping>
	<CustomUiAutomationMemberMapping Include="Windows.UI.Xaml.Controls.HyperlinkButton">
	  <Mappings>
		Command
	  </Mappings>
	</CustomUiAutomationMemberMapping>
	<CustomUiAutomationMemberMapping Include="Windows.UI.Xaml.Controls.TextBlock">
	  <Mappings>
		Text
	  </Mappings>
	</CustomUiAutomationMemberMapping>
	<CustomUiAutomationMemberMapping Include="Windows.UI.Xaml.Controls.Image">
	  <Mappings>
		Source
	  </Mappings>
	</CustomUiAutomationMemberMapping>
	<CustomUiAutomationMemberMapping Include="Windows.UI.Xaml.Controls.DatePicker">
	  <Mappings>
		Date
	  </Mappings>
	</CustomUiAutomationMemberMapping>
	<CustomUiAutomationMemberMapping Include="Windows.UI.Xaml.Controls.ComboBox">
	  <Mappings>
		ItemsSource
	  </Mappings>
	</CustomUiAutomationMemberMapping>
  </ItemGroup>

  <!-- ListView -->
  <ItemGroup Condition="$(DefineConstants.Contains('LEGACY_LISTVIEW'))">
	<!-- All -->
	<LegacyTypes Include="Uno.UI.Controls.Legacy.GridView" />
	<LegacyTypes Include="Uno.UI.Controls.Legacy.ListView" />
	<!-- iOS -->
	<LegacyTypes Condition="'$(XamarinProjectType)'=='ios'" Include="Uno.UI.Controls.Legacy.GridViewSource" />
	<LegacyTypes Condition="'$(XamarinProjectType)'=='ios'" Include="Uno.UI.Controls.Legacy.GridViewWrapGridLayout" />
	<LegacyTypes Condition="'$(XamarinProjectType)'=='ios'" Include="Uno.UI.Controls.Legacy.ListViewBase" />
	<LegacyTypes Condition="'$(XamarinProjectType)'=='ios'" Include="Uno.UI.Controls.Legacy.ListViewBaseLayout" />
	<LegacyTypes Condition="'$(XamarinProjectType)'=='ios'" Include="Uno.UI.Controls.Legacy.ListViewBaseLayoutTemplate" />
	<LegacyTypes Condition="'$(XamarinProjectType)'=='ios'" Include="Uno.UI.Controls.Legacy.ListViewBaseSource" />
	<LegacyTypes Condition="'$(XamarinProjectType)'=='ios'" Include="Uno.UI.Controls.Legacy.ListViewLayout" />
	<LegacyTypes Condition="'$(XamarinProjectType)'=='ios'" Include="Uno.UI.Controls.Legacy.ListViewSource" />
	<!-- Android -->
	<LegacyTypes Condition="'$(XamarinProjectType)'=='android'" Include="Uno.UI.Controls.Legacy.HorizontalGridView" />
	<LegacyTypes Condition="'$(XamarinProjectType)'=='android'" Include="Uno.UI.Controls.Legacy.HorizontalListView" />
	<!-- Umbrella -->
	<LegacyTypes Include="nVentive.Umbrella.Views.Behaviors.Legacy.ActiveListViewBaseBehavior" />
	<LegacyTypes Include="nVentive.Umbrella.Views.Behaviors.Legacy.GroupedCollectionBehavior" />
	<LegacyTypes Include="nVentive.Umbrella.Views.Behaviors.Legacy.ListViewBringIntoViewSelectedItemBehavior" />
  </ItemGroup>

  <Target Name="_IncludeXamlFiles" BeforeTargets="_UnoSourceGenerator" DependsOnTargets="_FillSourceGeneratorItemGroups">
	<!-- 
		This group is created as part of a target to ensure the 
		capture of target-defined Pages 
		-->
	<ItemGroup>
	  <SourceGeneratorInput Include="@(Page);@(ApplicationDefinition)" />
	</ItemGroup>
  </Target>

  <ItemGroup>
	<UnoSourceGeneratorAdditionalProperty Include="ExcludeXamlNamespacesProperty" />
	<UnoSourceGeneratorAdditionalProperty Include="IncludeXamlNamespacesProperty" />
	<UnoSourceGeneratorAdditionalProperty Include="XamlGeneratorAnalyzerSuppressionsProperty" />
	<UnoSourceGeneratorAdditionalProperty Include="UnoUIUseRoslynSourceGenerators" />
  </ItemGroup>

  <Target Name="_FillSourceGeneratorItemGroups">

	<ItemGroup>
		<CustomUiAutomationMemberMappingAdjusted Include="@(CustomUiAutomationMemberMapping)" Mappings="$([System.String]::new('%(Mappings)').Replace('&#x0A;',','))" />
	</ItemGroup>

	<CreateProperty Value="@(ExcludeXamlNamespaces, ',')">
	  <Output
			  TaskParameter="Value"
			  PropertyName="ExcludeXamlNamespacesProperty" />
	</CreateProperty>

	<CreateProperty Value="@(IncludeXamlNamespaces, ',')">
	  <Output
			  TaskParameter="Value"
			  PropertyName="IncludeXamlNamespacesProperty" />
	</CreateProperty>

	<CreateProperty Value="@(XamlGeneratorAnalyzerSuppressions, ',')">
		<Output
				TaskParameter="Value"
				PropertyName="XamlGeneratorAnalyzerSuppressionsProperty" />
	</CreateProperty>

	<CreateProperty Value="@(LegacyTypes, ',')">
		<Output
				TaskParameter="Value"
				PropertyName="LegacyTypesProperty" />
	</CreateProperty>

	<CreateProperty Value="$(ProjectTypeGuids.Replace(';',','))">
		<Output
				TaskParameter="Value"
				PropertyName="ProjectTypeGuidsProperty" />
	</CreateProperty>

	<CreateProperty Value="$(DefineConstants.Replace(';',','))">
		<Output
				TaskParameter="Value"
				PropertyName="DefineConstantsProperty" />
	</CreateProperty>

  </Target>

  <Target Name="_InjectAdditionalFiles" BeforeTargets="GenerateMSBuildEditorConfigFileShouldRun;GenerateMSBuildEditorConfigFileCore" DependsOnTargets="_FillSourceGeneratorItemGroups">
	<ItemGroup>
	  <AdditionalFiles Include="@(Page)" SourceItemGroup="Page" />
	  <AdditionalFiles Include="@(ApplicationDefinition)" SourceItemGroup="ApplicationDefinition" />
	  <AdditionalFiles Include="@(PRIResource)" SourceItemGroup="PRIResource" />
	  <AdditionalFiles Include="@(TSBindingAssemblySource)" SourceItemGroup="TSBindingAssemblySource" />
	  <AdditionalFiles Include="@(Analyzer)" SourceItemGroup="Analyzer" />

	  <_AdditionalFilesCleanup Include="@(AdditionalFiles)" />
	  <AdditionalFiles Remove="@(_AdditionalFilesCleanup)" />
	  <AdditionalFiles Condition="'@(_AdditionalFilesCleanup)'!=''" Include="@(_AdditionalFilesCleanup->'$([System.IO.Path]::GetFullPath('%(_AdditionalFilesCleanup.Identity)'))')" />
	</ItemGroup>
  </Target>

  <Target Name="UnoLogGeneratorsType" BeforeTargets="CoreCompile;_UnoSourceGenerator">
	<Message Importance="high"
		   Condition="'$(UnoUIUseRoslynSourceGenerators)'=='true'"
		   Text="Uno.UI is using Roslyn generators" />
	<Message Importance="high"
		   Condition="'$(UnoUIUseRoslynSourceGenerators)'==''"
		   Text="Uno.UI is using Uno.SourceGenerators" />
  </Target>

  <Target Name="_RemoveRoslynUnoSourceGeneration" BeforeTargets="CoreCompile" Condition="'$(UnoUIUseRoslynSourceGenerators)'=='false'">
	<!---
	If the users explicitly disables Roslyn source generation, remove the analyzer item which is automatically added by Nuget.
	-->
	<ItemGroup>
	  <_AnalyzerToRemove Include="@(Analyzer)" Condition="'%(FileName)'=='Uno.UI.SourceGenerators'" />
	  <Analyzer Remove="@(_AnalyzerToRemove)"/>
	</ItemGroup>
  </Target>

</Project>
